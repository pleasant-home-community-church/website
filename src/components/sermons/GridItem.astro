---
import type { Sermon } from '~/types';

import Image from '~/components/common/Image.astro';

import { findImage } from '~/utils/images';
import { getPermalink } from '~/utils/permalinks';
import { getFormattedDate } from '~/utils/utils';
import { Icon } from 'astro-icon/components';

export interface Props {
  sermon: Sermon;
}

const { sermon } = Astro.props;
const image = await findImage(`~/assets/images/sermons/${sermon.id}.jpg`);

const link = getPermalink(sermon.permalink, 'sermon');
const speakerLink = getPermalink(sermon.speaker?.permalink, 'speaker');
const seriesLink = getPermalink(sermon.series?.permalink, 'series');
---

<article
  class="mb-6 transition intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade"
>
  <div class="relative md:h-64 bg-gray-400 dark:bg-slate-700 rounded shadow-lg mb-6">
    {
      image &&
        (link ? (
          <a href={link}>
            <Image
              src={image}
              class="w-full md:h-full rounded shadow-lg bg-gray-400 dark:bg-slate-700"
              widths={[400, 900]}
              width={400}
              sizes="(max-width: 900px) 400px, 900px"
              alt={sermon.title}
              aspectRatio="16:9"
              layout="cover"
              loading="lazy"
              decoding="async"
            />
          </a>
        ) : (
          <Image
            src={image}
            class="w-full md:h-full rounded shadow-lg bg-gray-400 dark:bg-slate-700"
            widths={[400, 900]}
            width={400}
            sizes="(max-width: 900px) 400px, 900px"
            alt={sermon.title}
            aspectRatio="16:9"
            layout="cover"
            loading="lazy"
            decoding="async"
          />
        ))
    }
  </div>

  <span class="text-sm">
    {sermon.displayEventType && <span>{sermon.displayEventType}</span>}
    {' '}
    · <Icon name="tabler:clock" class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400" />
    <time datetime={String(sermon.preachDate)} class="inline-block">{getFormattedDate(sermon.preachDate)}</time>
  </span>
  <h3 class="text-xl sm:text-2xl font-bold leading-tight mb-2 font-heading dark:text-slate-300">
    {
      link ? (
        <a class="inline-block hover:text-primary dark:hover:text-blue-700 transition ease-in duration-200" href={link}>
          {sermon.title}
        </a>
      ) : (
        sermon.title
      )
    }
  </h3>
  <span class="text-sm">
    {
      sermon.bibleText && (
        <Icon name="tabler:bible" class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400" />
        <span>{sermon.bibleText}</span>
      )
    }
    { sermon.bibleText && sermon.series?.title && ( <>{' '} · </>)}
    {
      sermon.series?.title && (
       <a href={seriesLink}>
          <Icon name="tabler:category" class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400" />
          <span>{sermon.series?.title}</span>
        </a>
      )
    } <br />
    <span class="text-sm">
      {
        sermon.speaker?.displayName && (
          <>
            <a href={speakerLink}>
              <Icon name="tabler:user" class="w-3.5 h-3.5 inline-block -mt-0.5 dark:text-gray-400" />
              <span>{sermon.speaker?.displayName}</span>
            </a>
          </>
        )
      }
    </span>
  </span>
  
</article>
