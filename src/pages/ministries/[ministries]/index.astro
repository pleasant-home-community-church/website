---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import merge from 'lodash.merge';
import type { ImageMetadata } from 'astro';
import Layout from '~/layouts/PageLayout.astro';
import SingleMinistery from '~/components/ministries/SingleMinistry.astro';
import ToMinistryLink from '~/components/ministries/ToMinistryLink.astro';

import { getCanonical, getPermalink } from '~/utils/permalinks';
import { getStaticPathsMinistries, ministriesPostRobots } from '~/utils/ministries';
import { findImage } from '~/utils/images';
import type { MetaData } from '~/types';

export const prerender = true;

export const getStaticPaths = (async () => {
  return await getStaticPathsMinistries();
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { ministry } = Astro.props as Props;

const url = getCanonical(getPermalink(ministry.permalink, 'ministry'));
const image = (await findImage(ministry.image)) as ImageMetadata | string | undefined;

const metadata = merge(
  {
    title: ministry.title,
    description: ministry.excerpt,
    robots: {
      index: ministriesPostRobots?.index,
      follow: ministriesPostRobots?.follow,
    },
    openGraph: {
      type: 'article',
      ...(image
        ? { images: [{ url: image, width: (image as ImageMetadata)?.width, height: (image as ImageMetadata)?.height }] }
        : {}),
    },
  },
  { ...(ministry?.metadata ? { ...ministry.metadata, canonical: ministry.metadata?.canonical || url } : {}) }
) as MetaData;
---

<Layout metadata={metadata}>
  <SingleMinistery ministry={{ ...ministry, image: image }} url={url}>
    {ministry.Content ? <ministry.Content /> : <Fragment set:html={ministry.content || ''} />}
  </SingleMinistery>
  <ToMinistryLink />
</Layout>
