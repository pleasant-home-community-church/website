---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import merge from 'lodash.merge';
import type { ImageMetadata } from 'astro';
import Layout from '~/layouts/PageLayout.astro';
import SingleSeries from '~/components/series/SingleSeries.astro';
import ToSeriesLink from '~/components/series/ToSeriesLink.astro';

import { getCanonical, getPermalink } from '~/utils/permalinks';
import { getStaticPathsSeries, seriesRobots } from '~/utils/series';
import { findImage } from '~/utils/images';
import type { MetaData } from '~/types';

export const prerender = true;

export const getStaticPaths = (async () => {
  return await getStaticPathsSeries();
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { series } = Astro.props as Props;

const url = getCanonical(getPermalink(series.permalink, 'series'));
const image = (await findImage(series.image)) as ImageMetadata | string | undefined;

const metadata = merge(
  {
    title: series.title,
    robots: {
      index: seriesRobots?.index,
      follow: seriesRobots?.follow,
    },
    openGraph: {
      type: 'article',
      ...(image
        ? { images: [{ url: image, width: (image as ImageMetadata)?.width, height: (image as ImageMetadata)?.height }] }
        : {}),
    },
  },
  {}
  // { ...(series?.metadata ? { ...series.metadata, canonical: series.metadata?.canonical || url } : {}) }
) as MetaData;
---

<Layout metadata={metadata}>
  <SingleSeries series={{ ...series, image: image }} url={url}>
    <Fragment></Fragment>
  </SingleSeries>
  <ToSeriesLink />
</Layout>
