---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import merge from 'lodash.merge';
import type { ImageMetadata } from 'astro';
import Layout from '~/layouts/PageLayout.astro';
import SingleSermon from '~/components/sermons/SingleSermon.astro';
import ToSermonsLink from '~/components/sermons/ToSermonsLink.astro';

import { getCanonical, getPermalink } from '~/utils/permalinks';
import { getStaticPathsSermons, sermonsRobots } from '~/utils/sermons';
import { findImage } from '~/utils/images';
import type { MetaData } from '~/types';

export const getStaticPaths = (async () => {
  return await getStaticPathsSermons();
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { sermon } = Astro.props as Props;

const url = getCanonical(getPermalink(sermon.permalink, 'sermon'));
const image = (await findImage(sermon.image)) as ImageMetadata | string | undefined;

const metadata = merge(
  {
    title: sermon.title,
    description: sermon.title,
    robots: {
      index: sermonsRobots?.index,
      follow: sermonsRobots?.follow,
    },
    openGraph: {
      type: 'article',
      ...(image
        ? { images: [{ url: image, width: (image as ImageMetadata)?.width, height: (image as ImageMetadata)?.height }] }
        : {}),
    },
  },
  {}
  // { ...(sermon?.metadata ? { ...sermon.metadata, canonical: sermon.metadata?.canonical || url } : {}) }
) as MetaData;
---

<Layout metadata={metadata}>
  <SingleSermon sermon={{ ...sermon, image: image }} url={url}>
    <Fragment></Fragment>
  </SingleSermon>
  <ToSermonsLink />
</Layout>
