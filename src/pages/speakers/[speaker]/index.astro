---
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import merge from 'lodash.merge';
import type { ImageMetadata } from 'astro';
import Layout from '~/layouts/PageLayout.astro';
import ToSpeakersLink from '~/components/speakers/ToSpeakersLink.astro';
import Headline from '~/components/sermons/Headline.astro';
import { MantineProvider } from '@mantine/core';
import SermonsTable from '~/components/sermons/SermonsTable';

import { getStaticPathsSpeakers, speakersRobots } from '~/utils/speakers';
import { findImage } from '~/utils/images';
import type { MetaData } from '~/types';
import { findSermonsBySpeakers } from '~/utils/sermons';

export const getStaticPaths = (async () => {
  return await getStaticPathsSpeakers();
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { speaker } = Astro.props as Props;

const image = (await findImage(speaker.portaitURL)) as ImageMetadata | string | undefined;
const sermons = await findSermonsBySpeakers([speaker.id]);

const metadata = merge(
  {
    title: speaker.displayName,
    robots: {
      index: speakersRobots?.index,
      follow: speakersRobots?.follow,
    },
    openGraph: {
      type: 'article',
      ...(image
        ? { images: [{ url: image, width: (image as ImageMetadata)?.width, height: (image as ImageMetadata)?.height }] }
        : {}),
    },
  },
  {}
  // { ...(speaker?.metadata ? { ...speaker.metadata, canonical: speaker.metadata?.canonical || url } : {}) }
) as MetaData;
---

<Layout metadata={metadata}>
  <section class="px-6 sm:px-6 py-12 sm:py-16 lg:py-20 mx-auto max-w-4xl">
    <Headline>{speaker.displayName}</Headline>
    <MantineProvider>
      <SermonsTable sermons={sermons} />
    </MantineProvider>
  </section>
  <ToSpeakersLink />
</Layout>
